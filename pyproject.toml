[tool.black]
line-length = 120

[tool.isort]
line_length = 120
profile = "black"

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
show_error_codes = true
enable_error_code = "ignore-without-code"

[tool.ruff]
target-version = "py38"
line-length = 120

exclude = [
    "bimmer_connected/coord_convert.py",
]

[tool.ruff.lint]
select = [
    "A",  # flake8-builtins
    "ASYNC",  # flake8-async
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "C90",  # complexity
    "D",  # docstrings
    "E",  # pycodestyle
    "F",  # pyflakes/autoflake
    "FLY", # flynt
    "FURB", # refurb
    "I",  # isort
    "N",  # pep8-naming
    "PGH004",  # Use specific rule codes when using noqa
    "PL",  # pylint
    "RUF",  # ruff
    "SIM",  # flake8-simplicity
    "UP",  # pyupgrade
    "W",  # pycodestyle
]

ignore = [
    "D202",  # No blank lines allowed after function docstring
    "D203",  # 1 blank line required before class docstring
    "D212",  # Multi-line docstring summary should start at the first line
    "D213",  # Multi-line docstring summary should start at the second line
    "D100", # Missing docstring in public module
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in `__init__`
    "PLR0913",  # Too many arguments in function definition
    "PLR2004",  # Magic value used in comparison
]

[tool.ruff.lint.per-file-ignores]
"docs/source/conf.py" = ["A001", "D100"]
"bimmer_connected/api/authentication.py" = ["D102", "D107"]
"bimmer_connected/cli.py" = ["PLR0915"]
"bimmer_connected/models.py" = ["N815"]

[tool.ruff.lint.mccabe]
max-complexity = 25

[tool.codespell]
skip = "*.csv,*.json"
quiet-level = 2
ignore-words-list = [
    "hass",
    "socio-economic"
]